SELECT NAME, integration_id, agree_num, rev_num,TERM_TYPE, GCRM_STATUS, REAL_STATUS,
MEDIA,    ALL_MEDIA, RECURRING_PROD,

X_CUST_CLASS,X_CUSTOMER_SUBCLASS,
EFF_START_DT, EFF_END_DT, X_MONTLY_NET_PRICE,

CASE WHEN rev_num < 2 then 'REOPEN_RESUMBIT_ORDER' ELSE 'MANUAL_FIX' END AS RECOMMENDATION
FROM (

SELECT c.name, c.integration_id , a.row_id, a.agree_num, a.stat_cd as GCRM_STATUS, a.rev_num , a.X_TERM_TYPE TERM_TYPE
,RANK() OVER (PARTITION BY a.AGREE_NUM ORDER BY a.rev_num desc) AS r
,case when (( X_TERM_TYPE = 'Fixed Term' and EFF_END_DT < sysdate ) 
                        OR  a.stat_cd = 'Inactive' )  THEN
     'EXPIRED'
     ELSE 'ACTIVE' 
   END  AS REAL_STATUS,
   X_MONTLY_NET_PRICE,
 
 (  SELECT case when count(*) > 0 then 'Y' ELSE 'N' END from siebel.s_doc_agree p, siebel.s_asset q
, siebel.s_prod_int r
where p.row_id = q.cur_agree_id
and q.prod_id = r.row_id
and r.X_LN_PRODUCT_SEGMENT = 'Media'
and p.row_id = a.row_id ) AS MEDIA   ,

 (  SELECT CASE when count(*) > 0 then 'N'
             --   when count(*) = 0 then 'ZERO'
            ELSE 'Y' END from siebel.s_doc_agree p, siebel.s_asset q
, siebel.s_prod_int r
where p.row_id = q.cur_agree_id
and q.prod_id = r.row_id
and r.X_LN_PRODUCT_SEGMENT NOT IN ('Media', 'Services')
and p.row_id = a.row_id ) AS ALL_MEDIA   ,

 (  SELECT CASE when count(*) > 0 then 'Y'
            ELSE 'N' END from siebel.s_doc_agree p, siebel.s_asset q
, siebel.s_prod_int r
where p.row_id = q.cur_agree_id
and q.prod_id = r.row_id
--and r.X_LN_PRODUCT_SEGMENT NOT IN ('Media', 'Services')
and r.X_TRANSACTION_TYPE <> 'One-Time'
and p.row_id = a.row_id ) AS RECURRING_PROD   


,a.X_TERM_TYPE , a.X_ORDER_SUB_TYPE
, a.EFF_START_DT, a.EFF_END_DT, a.X_MULTI_TERM_FLG, c.X_CUST_CLASS, c.X_CUSTOMER_SUBCLASS
  
FROM  SIEBEL.s_doc_agree a,
siebel.s_org_Ext c
where a.TARGET_OU_ID = c.row_id
and agree_num in (
'1000498115',
'1000498119',
'1000498139',
'1000498675',
'1000498676',
'1000498225',
'1000498228',
'1000498229',
'1000498230',
'1000498232',
'1000498677',
'1000498233',
'1000498678',
'1000498679',
'1000498680',
'1000498307',
'1000498681',
'1000498060',
'1000498061',
'1000498063',
'1000498172',
'1000498173',
'1000498352',
'1000498360',
'1000498361',
'1000498362',
'1000498274',
'1000498276',
'1000498277',
'1000498411',
'1000498412',
'1000498416',
'1000498418',
'1000498420',
'1000498421',
'1000498422',
'1000498423',
'1000498429',
'1000498502',
'1000498753',
'1000498836',
'1000498838',
'1000320806',
'1000478092',
'1000478093',
'1000478095',
'1000478096',
'1000478097',
'1000478047',
'1000478103',
'1000478538',
'1000478539',
'1000478540',
'1000478542',
'1000478544',
'1000478545',
'1000478551',
'1000478553',
'1000478555',
'1000478556',
'1000478558',
'1000478559',
'1000478595',
'1000478563',
'1000478779',
'1000478782',
'1000478820',
'1000478821',
'1000478823',
'1000478969',
'1000479722',
'1000479795',
'1000479796',
'1000479798',
'1000479799',
'1000479749',
'1000479750',
'1000479751',
'1000479752',
'1000479753',
'1000479761',
'1000441617',
'1000496128',
'1000498229',
'1000498307',
'1000498361',
'1000498360',
'1000498423',
'1000498362',
'1000498418',
'1000498838',
'1000498675',
'1000496128',
'1000496128',
'1000498676',
'1000498681',
'1000498230',
'1000498411',
'1000498429',
'1000498412',
'1000498225',
'1000498416',
'1000498232',
'1000498836',
'1000498233',
'1000498139',
'1000498063',
'1000498276',
'1000535937',
'1000498172',
'1000498119',
'1000498677',
'1000498061',
'1000498089',
'1000498703',
'1000498413',
'1000498678',
'1000498422',
'1000498115',
'1000544303',
'1000544310',
'1000441978',
'1000441978',
'1000442006',
'1000441974',
'1000439547',
'1000440601',
'1000444488',
'1000444117',
'1000443083',
'1000443036',
'1000443036',
'1000443036',
'1000442993',
'1000442859',
'1000442845',
'1000442472',
'1000441946',
'1000441774',
'1000441671',
'1000441611',
'1000440509',
'1000440029',
'1000439857',
'1000444436',
'1000442139',
'1000444564',
'1000497934',
'1000442139',
'1000442746',
'1000444187',
'1000444435',
'1000498328',
'1000498735',
'1000549715',
'1000549856',
'1000549888',
'1000549962',
'1000440151',
'1000550184',
'1000442499',
'1000441977',
'1000442993',
'1000551318',
'1000442442',
'1000552224',
'1000552236',
'1000443080',
'1000443037',
'1000439082',
'1000441969',
'1000441750',
'1000441667',
'1000442915',
'1000442572',
'1000440600',
'1000444673',
'1000439859',
'1000442978',
'1000444292',
'1000442305',
'1000555061',
'1000440152',
'1000442791',
'1000444489',
'1000441884',
'1000556004',
'1000442744',
'1000442613',
'1000441886',
'1000442005',
'1000556769',
'1000442140',
'1000439083',
'1000440543',
'1000441978',
'1000441978',
'1000441978',
'1000557237',
'1000442042',
'1000442790',
'1000442614',
'1000442607',
'1000442141',
'1000441911',
'1000444186',
'1000442735',
'1000439856',
'1000442788',
'1000444582',
'1000444582',
'1000561819',
'1000443043',
'1000442857',
'1000442401',
'1000442043',
'1000444190',
'1000563097',
'1000563097',
'1000444449',
'1000442332',
'1000444686',
'1000441843',
'1000444603',
'1000563974',
'1000564023',
'1000498417',
'1000441669',
'1000442044',
'1000498143',
'1000498062',
'1000442682',
'1000442349',
'1000442199',
'1000442402',
'1000443033',
'1000442926',
'1000442250',
'1000442142',
'1000565654',
'1000444600',
'1000442734',
'1000442854',
'1000444601',
'1000442615',
'1000440194',
'1000442997',
'1000442928',
'1000441647',
'1000442800',
'1000442306',
'1000566793',
'1000442382',
'1000442382',
'1000442077',
'1000568004',
'1000442440',
'1000442314',
'1000442255',
'1000440557',
'1000440557',
'1000444171',
'1000441612',
'1000442750',
'1000442502',
'1000442385',
'1000444525',
'1000440403',
'1000442862',
'1000442441',
'1000442593',
'1000442384',
'1000440340',
'1000454187',
'1000454183',
'1000454184',
'1000454185'

)

order by c.integration_id, agree_num, a.rev_num desc
) WHERE r = 1
--and real_status <> 'EXPIRED'
ORDER BY 4